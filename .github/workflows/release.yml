name: Create Release

on:
  workflow_run:
    workflows: ["Build macOS", "Build Windows"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release (e.g., v1.1.0)'
        required: true
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest successful workflow runs
        id: workflow_runs
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            # Get the latest successful macOS build
            MACOS_RUN=$(gh api repos/${{ github.repository }}/actions/workflows/build-macos.yml/runs --jq '.workflow_runs[0] | select(.conclusion=="success")')
            if [ -z "$MACOS_RUN" ]; then
              echo "No successful macOS build found"
              exit 1
            fi
            echo "macos_run_id=$(echo $MACOS_RUN | jq -r '.id')" >> $GITHUB_OUTPUT
            
            # Get the latest successful Windows build
            WINDOWS_RUN=$(gh api repos/${{ github.repository }}/actions/workflows/build-windows.yml/runs --jq '.workflow_runs[0] | select(.conclusion=="success")')
            if [ -z "$WINDOWS_RUN" ]; then
              echo "No successful Windows build found"
              exit 1
            fi
            echo "windows_run_id=$(echo $WINDOWS_RUN | jq -r '.id')" >> $GITHUB_OUTPUT
          else
            echo "macos_run_id=${{ github.event.workflow_run.id }}" >> $GITHUB_OUTPUT
            echo "windows_run_id=${{ github.event.workflow_run.id }}" >> $GITHUB_OUTPUT
          fi

      - name: Download macOS artifact
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build-macos.yml
          name: macos-build
          path: macos-build
          run_id: ${{ steps.workflow_runs.outputs.macos_run_id }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Windows artifact
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build-windows.yml
          name: windows-build
          path: windows-build
          run_id: ${{ steps.workflow_runs.outputs.windows_run_id }}
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify artifacts
        run: |
          if [ ! -d "macos-build" ]; then
            echo "macOS build artifact not found"
            exit 1
          fi
          if [ ! -d "windows-build" ]; then
            echo "Windows build artifact not found"
            exit 1
          fi

      - name: Get tag info
        id: tag_info
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            TAG="${{ github.event.inputs.tag }}"
          else
            TAG="${{ github.ref_name }}"
          fi
          
          # Verify tag exists
          if ! git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "Tag $TAG does not exist"
            exit 1
          fi
          
          # Get tag message
          TAG_MESSAGE=$(git tag -l --format='%(contents)' "$TAG")
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "message=$TAG_MESSAGE" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag_info.outputs.tag }}
          name: Release ${{ steps.tag_info.outputs.tag }}
          body: ${{ steps.tag_info.outputs.message }}
          draft: false
          prerelease: false
          files: |
            macos-build/Alien Invasion.app
            windows-build/Alien Invasion.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify on success
        if: success()
        run: |
          echo "Release created successfully!"
          echo "Included artifacts:"
          echo "- macOS: Alien Invasion.app"
          echo "- Windows: Alien Invasion.exe"

      - name: Notify on failure
        if: failure()
        run: |
          echo "Release creation failed!"
          echo "Check the logs for more information." 