name: Create Release

on:
  workflow_run:
    workflows: ["Build macOS", "Build Windows"]
    types:
      - completed
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.1.0)'
        required: true
        type: string

jobs:
  create-release:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download macOS artifact
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build-macos.yml
          name: macos-build
          path: macos-build
          run_id: ${{ github.event.workflow_run.id }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Windows artifact
        uses: dawidd6/action-download-artifact@v6
        with:
          workflow: build-windows.yml
          name: windows-build
          path: windows-build
          run_id: ${{ github.event.workflow_run.id }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify artifacts
        run: |
          if [ ! -d "macos-build" ]; then
            echo "macOS build artifact not found"
            exit 1
          fi
          if [ ! -d "windows-build" ]; then
            echo "Windows build artifact not found"
            exit 1
          fi

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.event.inputs.version || github.ref_name }}
          draft: false
          prerelease: false
          files: |
            macos-build/Alien Invasion.app
            windows-build/Alien Invasion.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Notify on success
        if: success()
        run: |
          echo "Release created successfully!"
          echo "Included artifacts:"
          echo "- macOS: Alien Invasion.app"
          echo "- Windows: Alien Invasion.exe"

      - name: Notify on failure
        if: failure()
        run: |
          echo "Release creation failed!"
          echo "Check the logs for more information." 